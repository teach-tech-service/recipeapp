{"version":3,"sources":["../../src/controllers/statistics.js"],"names":["getNumberOfRecipes","req","res","Recipes","find","sort","createdAt","recipes","recipeWithDates","i","length","count","k","isInside","getDate","date","getMonth","getFullYear","push","weekBehind","Date","setDate","Number","params","numberOfDays","arr","splice","send","getCuisines","getDifficulty"],"mappings":"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","sourcesContent":["import Recipes from \"../models/recipe\";\nimport { groupByWithCount } from \"../helpers/groupBy\";\n\nexport async function getNumberOfRecipes(req, res) {\n  const recipes = await Recipes.find({}).sort({ createdAt: 1 });\n  let recipeWithDates = [];\n  for (let i = 0; i < recipes.length; i++) {\n    let count = 1;\n    for (let k = 0; k < recipes.length; k++) {\n      if (k !== i && recipes[i].createdAt >= recipes[k].createdAt) {\n        count++;\n      }\n    }\n    let isInside = false;\n    for (let k = 0; k < recipeWithDates.length; k++) {\n      if (\n        recipes[i].createdAt.getDate() == recipeWithDates[k].date.getDate() &&\n        recipes[i].createdAt.getMonth() == recipeWithDates[k].date.getMonth() &&\n        recipes[i].createdAt.getFullYear() ==\n          recipeWithDates[k].date.getFullYear()\n      ) {\n        isInside = true;\n      }\n    }\n    if (!isInside) {\n      recipeWithDates.push({\n        date: recipes[i].createdAt,\n        count\n      });\n    }\n  }\n\n  let weekBehind = new Date();\n  weekBehind.setDate(weekBehind.getDate() - Number(req.params.numberOfDays));\n  let arr = [];\n  for (let i = recipeWithDates.length - 1; i >= 0; i--) {\n    if (\n      (recipeWithDates[i].date.getMonth() == weekBehind.getMonth() &&\n        recipeWithDates[i].date.getFullYear() == weekBehind.getFullYear() &&\n        recipeWithDates[i].date.getDate() < weekBehind.getDate()) ||\n      (recipeWithDates[i].date.getMonth() < weekBehind.getMonth() &&\n        recipeWithDates[i].date.getFullYear() <= weekBehind.getFullYear())\n    ) {\n      recipeWithDates.splice(i, 1);\n    }\n  }\n  res.send({\n    recipes: recipeWithDates\n  });\n}\n\nexport async function getCuisines(req, res) {\n  const recipes = await groupByWithCount(\"cuisine\");\n  res.send({ recipes });\n}\n\nexport async function getDifficulty(req, res) {\n  const recipes = await groupByWithCount(\"difficulty\");\n  res.send({ recipes });\n}\n"],"file":"statistics.js"}